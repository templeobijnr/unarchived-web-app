# Generated by Django 5.2.4 on 2025-08-04 12:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dpgs', '0001_initial'),
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Defines the sequence of stages for display.')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ON_HOLD', 'On Hold'), ('COMPLETED', 'Completed'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=20)),
                ('category', models.CharField(blank=True, help_text='e.g., Apparel, Electronics, Home Goods', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active_dpg', models.OneToOneField(blank=True, help_text='The DPG currently being worked on by the agent in this project.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_in_project', to='dpgs.digitalproductgenome')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_projects', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectContextEngine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('design_intent', models.TextField(blank=True, help_text="Summary of the project's design goals or intent.")),
                ('business_requirements', models.TextField(blank=True, help_text='Summary of business requirements (budget, timeline, market, etc).')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='context_engine', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('OWNER', 'Owner'), ('EDITOR', 'Editor'), ('VIEWER', 'Viewer')], default='VIEWER', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='projects', through='projects.ProjectMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='projects.projectstage'),
        ),
        migrations.CreateModel(
            name='ProjectUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(blank=True, help_text='Auto-tag (sketch, specification, reference)', max_length=20)),
                ('extracted_text', models.TextField(blank=True, help_text='Full text extracted from the file (OCR or text parse).')),
                ('design_intent', models.TextField(blank=True, help_text='Design intent extracted from this file.')),
                ('business_requirements', models.TextField(blank=True, help_text='Business requirements info extracted from this file.')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_uploads', to='files.uploadedfile')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='projects.project')),
            ],
        ),
    ]
